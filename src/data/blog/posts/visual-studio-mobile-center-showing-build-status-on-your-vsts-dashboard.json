{
  "id": "visual-studio-mobile-center-showing-build-status-on-your-vsts-dashboard",
  "slug": "visual-studio-mobile-center-showing-build-status-on-your-vsts-dashboard",
  "title": "Visual Studio Mobile Center – Showing build status on your VSTS dashboard",
  "excerpt": "Learn how to integrate Visual Studio Mobile Center build status into your VSTS dashboard for better visibility across your CI/CD pipeline.",
  "content": "\n# Visual Studio Mobile Center – Showing build status on your VSTS dashboard\n\n*Published on July 15, 2017*\n\n## Overview\n\nWant to see your Mobile Center build status right on your VSTS dashboard? Here's how to set it up for better visibility across your entire CI/CD pipeline.\n\n## Why Integrate Build Status?\n\nHaving all your build statuses in one place:\n- Improves team visibility\n- Reduces context switching\n- Helps identify bottlenecks quickly\n- Provides a single source of truth\n\n## Step-by-Step Setup\n\n### Step 1: Generate Mobile Center API Token\n\n1. Log into Mobile Center\n2. Navigate to Account Settings\n3. Generate a new API token with read access\n\n### Step 2: Create VSTS Dashboard Widget\n\n1. Open your VSTS project dashboard\n2. Click \"Edit Dashboard\"\n3. Add a new \"REST API\" widget\n\n### Step 3: Configure the Widget\n\nUse the following configuration:\n\n```javascript\n{\n  \"url\": \"https://api.mobile.azure.com/v0.1/apps/{owner}/{app}/builds\",\n  \"headers\": {\n    \"X-API-Token\": \"your-token-here\"\n  },\n  \"method\": \"GET\"\n}\n```\n\n### Step 4: Create Custom Visualization\n\nFor better visualization, create a custom widget using the VSTS Extension SDK:\n\n```typescript\nVSS.require([\"TFS/Dashboards/WidgetHelpers\"], function (WidgetHelpers) {\n    WidgetHelpers.IncludeWidgetStyles();\n    VSS.register(\"MobileCenterBuildStatus\", function () {\n        return {\n            load: function (widgetSettings) {\n                // Fetch and display build status\n                return getMobileCenterBuilds()\n                    .then(displayBuildStatus);\n            }\n        };\n    });\n});\n```\n\n## Alternative Approaches\n\n### Using Web Hooks\nMobile Center supports webhooks that can update VSTS directly:\n\n1. Configure webhook in Mobile Center\n2. Point to VSTS incoming webhook URL\n3. Map build events to dashboard updates\n\n### Using Azure Functions\nCreate an Azure Function as middleware:\n\n1. Function polls Mobile Center API\n2. Transforms data for VSTS\n3. Updates dashboard via VSTS API\n\n## Conclusion\n\nIntegrating Mobile Center build status into your VSTS dashboard provides valuable visibility for your team. Choose the approach that best fits your needs and security requirements.\n",
  "publishedAt": "2017-07-15T00:00:00.000Z",
  "author": "Simon Lamb",
  "featuredImage": null,
  "images": [],
  "originalUrl": "https://simonlamb.codes/2017/07/15/visual-studio-mobile-center-showing-build-status-on-your-vsts-dashboard/",
  "readingTime": 5,
  "tags": ["VSTS", "Azure DevOps", "Mobile Development", "Visual Studio"],
  "categories": ["DevOps", "Mobile Development"]
}
